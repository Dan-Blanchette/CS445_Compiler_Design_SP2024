Terminals unused in grammar

   FIRSTOP
   CHSIGN
   SIZEOF
   LASTOP
   LASTTERM


State 0 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: precompList declList

    2 precompList: precompList PRECOMPILER
    3            | PRECOMPILER
    4            | %empty

    5 declList: declList decl
    6         | decl

    7 decl: varDecl
    8     | funDecl

    9 varDecl: typeSpec varDeclList ';'

   10 scopedVarDecl: STATIC typeSpec varDeclList ';'
   11              | typeSpec varDeclList ';'

   12 varDeclList: varDeclList ',' varDeclInit
   13            | varDeclInit

   14 varDeclInit: varDeclId
   15            | varDeclId ':' simpleExp

   16 varDeclId: ID
   17          | ID '[' NUMCONST ']'

   18 typeSpec: INT
   19         | BOOL
   20         | CHAR

   21 funDecl: typeSpec ID '(' parms ')' stmt
   22        | ID '(' parms ')' stmt

   23 parms: parmList
   24      | %empty

   25 parmList: parmList ';' parmTypeList
   26         | parmTypeList

   27 parmTypeList: typeSpec parmIdList

   28 parmIdList: parmIdList ',' parmId
   29           | parmId

   30 parmId: ID
   31       | ID '[' ']'

   32 stmt: matched
   33     | unmatched

   34 matched: IF simpleExp THEN matched ELSE matched
   35        | WHILE simpleExp DO matched
   36        | FOR ID '=' iterRange DO matched
   37        | expstmt
   38        | compoundstmt
   39        | returnstmt
   40        | breakstmt

   41 iterRange: simpleExp TO simpleExp
   42          | simpleExp TO simpleExp BY simpleExp

   43 unmatched: IF simpleExp THEN stmt
   44          | IF simpleExp THEN matched ELSE unmatched
   45          | WHILE simpleExp DO unmatched
   46          | FOR ID '=' iterRange DO unmatched

   47 expstmt: exp ';'
   48        | ';'

   49 compoundstmt: '{' localDecls stmtList '}'
   50             | compoundstmt ';'

   51 localDecls: localDecls scopedVarDecl
   52           | %empty

   53 stmtList: stmtList stmt
   54         | %empty

   55 returnstmt: RETURN ';'
   56           | RETURN exp ';'
   57           | RETURN error ';'

   58 breakstmt: BREAK ';'

   59 exp: mutable assignop exp
   60    | mutable INC
   61    | mutable DEC
   62    | simpleExp
   63    | mutable assignop error

   64 assignop: '='
   65         | ADDASS
   66         | SUBASS
   67         | MULASS
   68         | DIVASS

   69 simpleExp: simpleExp OR andExp
   70          | andExp

   71 andExp: andExp AND unaryRelExp
   72       | unaryRelExp

   73 unaryRelExp: NOT unaryRelExp
   74            | relExp

   75 relExp: minmaxExp relop minmaxExp
   76       | minmaxExp

   77 relop: LEQ
   78      | '<'
   79      | '>'
   80      | GEQ
   81      | EQ
   82      | NEQ

   83 minmaxExp: minmaxExp minmaxop sumExp
   84          | sumExp

   85 minmaxop: MAX
   86         | MIN

   87 sumExp: sumExp sumop mulExp
   88       | mulExp

   89 sumop: '+'
   90      | '-'

   91 mulExp: mulExp mulop unaryExp
   92       | unaryExp

   93 mulop: '*'
   94      | '/'
   95      | '%'

   96 unaryExp: unaryop unaryExp
   97         | factor

   98 unaryop: '-'
   99        | '*'
  100        | '?'

  101 factor: immutable
  102       | mutable

  103 mutable: ID
  104        | ID '[' exp ']'

  105 immutable: '(' exp ')'
  106          | call
  107          | constant

  108 call: ID '(' args ')'

  109 args: argList
  110     | %empty

  111 argList: argList ',' exp
  112        | exp

  113 constant: NUMCONST
  114         | CHARCONST
  115         | STRINGCONST
  116         | BOOLCONST


Terminals, with rules where they appear

$end (0) 0
'%' (37) 95
'(' (40) 21 22 105 108
')' (41) 21 22 105 108
'*' (42) 93 99
'+' (43) 89
',' (44) 12 28 111
'-' (45) 90 98
'/' (47) 94
':' (58) 15
';' (59) 9 10 11 25 47 48 50 55 56 57 58
'<' (60) 78
'=' (61) 36 46 64
'>' (62) 79
'?' (63) 100
'[' (91) 17 31 104
']' (93) 17 31 104
'{' (123) 49
'}' (125) 49
error (256) 57 63
FIRSTOP (258)
ADDASS (259) 65
DIVASS (260) 68
MULASS (261) 67
SUBASS (262) 66
AND (263) 71
OR (264) 69
NOT (265) 73
CHSIGN (266)
SIZEOF (267)
EQ (268) 81
GEQ (269) 80
LEQ (270) 77
NEQ (271) 82
MIN (272) 86
MAX (273) 85
INC (274) 60
DEC (275) 61
PRECOMPILER (276) 2 3
LASTOP (277)
IF (278) 34 43 44
BOOL (279) 19
THEN (280) 34 43 44
ELSE (281) 34 44
FOR (282) 36 46
INT (283) 18
BY (284) 42
TO (285) 41 42
RETURN (286) 55 56 57
STATIC (287) 10
DO (288) 35 36 45 46
WHILE (289) 35 45
BREAK (290) 58
CHAR (291) 20
ID (292) 16 17 21 22 30 31 36 46 103 104 108
BOOLCONST (293) 116
NUMCONST (294) 17 113
CHARCONST (295) 114
STRINGCONST (296) 115
LASTTERM (297)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
program (62)
    on left: 1, on right: 0
precompList (63)
    on left: 2 3 4, on right: 1 2
declList (64)
    on left: 5 6, on right: 1 5
decl (65)
    on left: 7 8, on right: 5 6
varDecl (66)
    on left: 9, on right: 7
scopedVarDecl (67)
    on left: 10 11, on right: 51
varDeclList (68)
    on left: 12 13, on right: 9 10 11 12
varDeclInit (69)
    on left: 14 15, on right: 12 13
varDeclId (70)
    on left: 16 17, on right: 14 15
typeSpec (71)
    on left: 18 19 20, on right: 9 10 11 21 27
funDecl (72)
    on left: 21 22, on right: 8
parms (73)
    on left: 23 24, on right: 21 22
parmList (74)
    on left: 25 26, on right: 23 25
parmTypeList (75)
    on left: 27, on right: 25 26
parmIdList (76)
    on left: 28 29, on right: 27 28
parmId (77)
    on left: 30 31, on right: 28 29
stmt (78)
    on left: 32 33, on right: 21 22 43 53
matched (79)
    on left: 34 35 36 37 38 39 40, on right: 32 34 35 36 44
iterRange (80)
    on left: 41 42, on right: 36 46
unmatched (81)
    on left: 43 44 45 46, on right: 33 44 45 46
expstmt (82)
    on left: 47 48, on right: 37
compoundstmt (83)
    on left: 49 50, on right: 38 50
localDecls (84)
    on left: 51 52, on right: 49 51
stmtList (85)
    on left: 53 54, on right: 49 53
returnstmt (86)
    on left: 55 56 57, on right: 39
breakstmt (87)
    on left: 58, on right: 40
exp (88)
    on left: 59 60 61 62 63, on right: 47 56 59 104 105 111 112
assignop (89)
    on left: 64 65 66 67 68, on right: 59 63
simpleExp (90)
    on left: 69 70, on right: 15 34 35 41 42 43 44 45 62 69
andExp (91)
    on left: 71 72, on right: 69 70 71
unaryRelExp (92)
    on left: 73 74, on right: 71 72 73
relExp (93)
    on left: 75 76, on right: 74
relop (94)
    on left: 77 78 79 80 81 82, on right: 75
minmaxExp (95)
    on left: 83 84, on right: 75 76 83
minmaxop (96)
    on left: 85 86, on right: 83
sumExp (97)
    on left: 87 88, on right: 83 84 87
sumop (98)
    on left: 89 90, on right: 87
mulExp (99)
    on left: 91 92, on right: 87 88 91
mulop (100)
    on left: 93 94 95, on right: 91
unaryExp (101)
    on left: 96 97, on right: 91 92 96
unaryop (102)
    on left: 98 99 100, on right: 96
factor (103)
    on left: 101 102, on right: 97
mutable (104)
    on left: 103 104, on right: 59 60 61 63 102
immutable (105)
    on left: 105 106 107, on right: 101
call (106)
    on left: 108, on right: 106
args (107)
    on left: 109 110, on right: 108
argList (108)
    on left: 111 112, on right: 109 111
constant (109)
    on left: 113 114 115 116, on right: 107


State 0

    0 $accept: . program $end

    PRECOMPILER  shift, and go to state 1

    PRECOMPILER  [reduce using rule 4 (precompList)]
    $default     reduce using rule 4 (precompList)

    program      go to state 2
    precompList  go to state 3


State 1

    3 precompList: PRECOMPILER .

    $default  reduce using rule 3 (precompList)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: precompList . declList
    2 precompList: precompList . PRECOMPILER

    PRECOMPILER  shift, and go to state 5
    BOOL         shift, and go to state 6
    INT          shift, and go to state 7
    CHAR         shift, and go to state 8
    ID           shift, and go to state 9

    declList  go to state 10
    decl      go to state 11
    varDecl   go to state 12
    typeSpec  go to state 13
    funDecl   go to state 14


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 precompList: precompList PRECOMPILER .

    $default  reduce using rule 2 (precompList)


State 6

   19 typeSpec: BOOL .

    $default  reduce using rule 19 (typeSpec)


State 7

   18 typeSpec: INT .

    $default  reduce using rule 18 (typeSpec)


State 8

   20 typeSpec: CHAR .

    $default  reduce using rule 20 (typeSpec)


State 9

   22 funDecl: ID . '(' parms ')' stmt

    '('  shift, and go to state 15


State 10

    1 program: precompList declList .
    5 declList: declList . decl

    BOOL  shift, and go to state 6
    INT   shift, and go to state 7
    CHAR  shift, and go to state 8
    ID    shift, and go to state 9

    $default  reduce using rule 1 (program)

    decl      go to state 16
    varDecl   go to state 12
    typeSpec  go to state 13
    funDecl   go to state 14


State 11

    6 declList: decl .

    $default  reduce using rule 6 (declList)


State 12

    7 decl: varDecl .

    $default  reduce using rule 7 (decl)


State 13

    9 varDecl: typeSpec . varDeclList ';'
   21 funDecl: typeSpec . ID '(' parms ')' stmt

    ID  shift, and go to state 17

    varDeclList  go to state 18
    varDeclInit  go to state 19
    varDeclId    go to state 20


State 14

    8 decl: funDecl .

    $default  reduce using rule 8 (decl)


State 15

   22 funDecl: ID '(' . parms ')' stmt

    BOOL  shift, and go to state 6
    INT   shift, and go to state 7
    CHAR  shift, and go to state 8

    $default  reduce using rule 24 (parms)

    typeSpec      go to state 21
    parms         go to state 22
    parmList      go to state 23
    parmTypeList  go to state 24


State 16

    5 declList: declList decl .

    $default  reduce using rule 5 (declList)


State 17

   16 varDeclId: ID .
   17          | ID . '[' NUMCONST ']'
   21 funDecl: typeSpec ID . '(' parms ')' stmt

    '['  shift, and go to state 25
    '('  shift, and go to state 26

    $default  reduce using rule 16 (varDeclId)


State 18

    9 varDecl: typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit

    ';'  shift, and go to state 27
    ','  shift, and go to state 28


State 19

   13 varDeclList: varDeclInit .

    $default  reduce using rule 13 (varDeclList)


State 20

   14 varDeclInit: varDeclId .
   15            | varDeclId . ':' simpleExp

    ':'  shift, and go to state 29

    $default  reduce using rule 14 (varDeclInit)


State 21

   27 parmTypeList: typeSpec . parmIdList

    ID  shift, and go to state 30

    parmIdList  go to state 31
    parmId      go to state 32


State 22

   22 funDecl: ID '(' parms . ')' stmt

    ')'  shift, and go to state 33


State 23

   23 parms: parmList .
   25 parmList: parmList . ';' parmTypeList

    ';'  shift, and go to state 34

    $default  reduce using rule 23 (parms)


State 24

   26 parmList: parmTypeList .

    $default  reduce using rule 26 (parmList)


State 25

   17 varDeclId: ID '[' . NUMCONST ']'

    NUMCONST  shift, and go to state 35


State 26

   21 funDecl: typeSpec ID '(' . parms ')' stmt

    BOOL  shift, and go to state 6
    INT   shift, and go to state 7
    CHAR  shift, and go to state 8

    $default  reduce using rule 24 (parms)

    typeSpec      go to state 21
    parms         go to state 36
    parmList      go to state 23
    parmTypeList  go to state 24


State 27

    9 varDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 9 (varDecl)


State 28

   12 varDeclList: varDeclList ',' . varDeclInit

    ID  shift, and go to state 37

    varDeclInit  go to state 38
    varDeclId    go to state 20


State 29

   15 varDeclInit: varDeclId ':' . simpleExp

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    simpleExp    go to state 49
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 30

   30 parmId: ID .
   31       | ID . '[' ']'

    '['  shift, and go to state 63

    $default  reduce using rule 30 (parmId)


State 31

   27 parmTypeList: typeSpec parmIdList .
   28 parmIdList: parmIdList . ',' parmId

    ','  shift, and go to state 64

    $default  reduce using rule 27 (parmTypeList)


State 32

   29 parmIdList: parmId .

    $default  reduce using rule 29 (parmIdList)


State 33

   22 funDecl: ID '(' parms ')' . stmt

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    RETURN       shift, and go to state 67
    WHILE        shift, and go to state 68
    BREAK        shift, and go to state 69
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    '{'          shift, and go to state 70
    ';'          shift, and go to state 71

    stmt          go to state 72
    matched       go to state 73
    unmatched     go to state 74
    expstmt       go to state 75
    compoundstmt  go to state 76
    returnstmt    go to state 77
    breakstmt     go to state 78
    exp           go to state 79
    simpleExp     go to state 80
    andExp        go to state 50
    unaryRelExp   go to state 51
    relExp        go to state 52
    minmaxExp     go to state 53
    sumExp        go to state 54
    mulExp        go to state 55
    unaryExp      go to state 56
    unaryop       go to state 57
    factor        go to state 58
    mutable       go to state 81
    immutable     go to state 60
    call          go to state 61
    constant      go to state 62


State 34

   25 parmList: parmList ';' . parmTypeList

    BOOL  shift, and go to state 6
    INT   shift, and go to state 7
    CHAR  shift, and go to state 8

    typeSpec      go to state 21
    parmTypeList  go to state 82


State 35

   17 varDeclId: ID '[' NUMCONST . ']'

    ']'  shift, and go to state 83


State 36

   21 funDecl: typeSpec ID '(' parms . ')' stmt

    ')'  shift, and go to state 84


State 37

   16 varDeclId: ID .
   17          | ID . '[' NUMCONST ']'

    '['  shift, and go to state 25

    $default  reduce using rule 16 (varDeclId)


State 38

   12 varDeclList: varDeclList ',' varDeclInit .

    $default  reduce using rule 12 (varDeclList)


State 39

   73 unaryRelExp: NOT . unaryRelExp

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    unaryRelExp  go to state 85
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 40

   99 unaryop: '*' .

    $default  reduce using rule 99 (unaryop)


State 41

   98 unaryop: '-' .

    $default  reduce using rule 98 (unaryop)


State 42

  100 unaryop: '?' .

    $default  reduce using rule 100 (unaryop)


State 43

  103 mutable: ID .
  104        | ID . '[' exp ']'
  108 call: ID . '(' args ')'

    '['  shift, and go to state 86
    '('  shift, and go to state 87

    $default  reduce using rule 103 (mutable)


State 44

  116 constant: BOOLCONST .

    $default  reduce using rule 116 (constant)


State 45

  113 constant: NUMCONST .

    $default  reduce using rule 113 (constant)


State 46

  114 constant: CHARCONST .

    $default  reduce using rule 114 (constant)


State 47

  115 constant: STRINGCONST .

    $default  reduce using rule 115 (constant)


State 48

  105 immutable: '(' . exp ')'

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    exp          go to state 88
    simpleExp    go to state 80
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 81
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 49

   15 varDeclInit: varDeclId ':' simpleExp .
   69 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 89

    $default  reduce using rule 15 (varDeclInit)


State 50

   70 simpleExp: andExp .
   71 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 90

    $default  reduce using rule 70 (simpleExp)


State 51

   72 andExp: unaryRelExp .

    $default  reduce using rule 72 (andExp)


State 52

   74 unaryRelExp: relExp .

    $default  reduce using rule 74 (unaryRelExp)


State 53

   75 relExp: minmaxExp . relop minmaxExp
   76       | minmaxExp .
   83 minmaxExp: minmaxExp . minmaxop sumExp

    EQ   shift, and go to state 91
    GEQ  shift, and go to state 92
    LEQ  shift, and go to state 93
    NEQ  shift, and go to state 94
    MIN  shift, and go to state 95
    MAX  shift, and go to state 96
    '<'  shift, and go to state 97
    '>'  shift, and go to state 98

    $default  reduce using rule 76 (relExp)

    relop     go to state 99
    minmaxop  go to state 100


State 54

   84 minmaxExp: sumExp .
   87 sumExp: sumExp . sumop mulExp

    '-'  shift, and go to state 101
    '+'  shift, and go to state 102

    $default  reduce using rule 84 (minmaxExp)

    sumop  go to state 103


State 55

   88 sumExp: mulExp .
   91 mulExp: mulExp . mulop unaryExp

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106

    $default  reduce using rule 88 (sumExp)

    mulop  go to state 107


State 56

   92 mulExp: unaryExp .

    $default  reduce using rule 92 (mulExp)


State 57

   96 unaryExp: unaryop . unaryExp

    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    unaryExp   go to state 108
    unaryop    go to state 57
    factor     go to state 58
    mutable    go to state 59
    immutable  go to state 60
    call       go to state 61
    constant   go to state 62


State 58

   97 unaryExp: factor .

    $default  reduce using rule 97 (unaryExp)


State 59

  102 factor: mutable .

    $default  reduce using rule 102 (factor)


State 60

  101 factor: immutable .

    $default  reduce using rule 101 (factor)


State 61

  106 immutable: call .

    $default  reduce using rule 106 (immutable)


State 62

  107 immutable: constant .

    $default  reduce using rule 107 (immutable)


State 63

   31 parmId: ID '[' . ']'

    ']'  shift, and go to state 109


State 64

   28 parmIdList: parmIdList ',' . parmId

    ID  shift, and go to state 30

    parmId  go to state 110


State 65

   34 matched: IF . simpleExp THEN matched ELSE matched
   43 unmatched: IF . simpleExp THEN stmt
   44          | IF . simpleExp THEN matched ELSE unmatched

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    simpleExp    go to state 111
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 66

   36 matched: FOR . ID '=' iterRange DO matched
   46 unmatched: FOR . ID '=' iterRange DO unmatched

    ID  shift, and go to state 112


State 67

   55 returnstmt: RETURN . ';'
   56           | RETURN . exp ';'
   57           | RETURN . error ';'

    error        shift, and go to state 113
    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    ';'          shift, and go to state 114

    exp          go to state 115
    simpleExp    go to state 80
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 81
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 68

   35 matched: WHILE . simpleExp DO matched
   45 unmatched: WHILE . simpleExp DO unmatched

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    simpleExp    go to state 116
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 69

   58 breakstmt: BREAK . ';'

    ';'  shift, and go to state 117


State 70

   49 compoundstmt: '{' . localDecls stmtList '}'

    $default  reduce using rule 52 (localDecls)

    localDecls  go to state 118


State 71

   48 expstmt: ';' .

    $default  reduce using rule 48 (expstmt)


State 72

   22 funDecl: ID '(' parms ')' stmt .

    $default  reduce using rule 22 (funDecl)


State 73

   32 stmt: matched .

    $default  reduce using rule 32 (stmt)


State 74

   33 stmt: unmatched .

    $default  reduce using rule 33 (stmt)


State 75

   37 matched: expstmt .

    $default  reduce using rule 37 (matched)


State 76

   38 matched: compoundstmt .
   50 compoundstmt: compoundstmt . ';'

    ';'  shift, and go to state 119

    ';'       [reduce using rule 38 (matched)]
    $default  reduce using rule 38 (matched)


State 77

   39 matched: returnstmt .

    $default  reduce using rule 39 (matched)


State 78

   40 matched: breakstmt .

    $default  reduce using rule 40 (matched)


State 79

   47 expstmt: exp . ';'

    ';'  shift, and go to state 120


State 80

   62 exp: simpleExp .
   69 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 89

    $default  reduce using rule 62 (exp)


State 81

   59 exp: mutable . assignop exp
   60    | mutable . INC
   61    | mutable . DEC
   63    | mutable . assignop error
  102 factor: mutable .

    ADDASS  shift, and go to state 121
    DIVASS  shift, and go to state 122
    MULASS  shift, and go to state 123
    SUBASS  shift, and go to state 124
    INC     shift, and go to state 125
    DEC     shift, and go to state 126
    '='     shift, and go to state 127

    $default  reduce using rule 102 (factor)

    assignop  go to state 128


State 82

   25 parmList: parmList ';' parmTypeList .

    $default  reduce using rule 25 (parmList)


State 83

   17 varDeclId: ID '[' NUMCONST ']' .

    $default  reduce using rule 17 (varDeclId)


State 84

   21 funDecl: typeSpec ID '(' parms ')' . stmt

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    RETURN       shift, and go to state 67
    WHILE        shift, and go to state 68
    BREAK        shift, and go to state 69
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    '{'          shift, and go to state 70
    ';'          shift, and go to state 71

    stmt          go to state 129
    matched       go to state 73
    unmatched     go to state 74
    expstmt       go to state 75
    compoundstmt  go to state 76
    returnstmt    go to state 77
    breakstmt     go to state 78
    exp           go to state 79
    simpleExp     go to state 80
    andExp        go to state 50
    unaryRelExp   go to state 51
    relExp        go to state 52
    minmaxExp     go to state 53
    sumExp        go to state 54
    mulExp        go to state 55
    unaryExp      go to state 56
    unaryop       go to state 57
    factor        go to state 58
    mutable       go to state 81
    immutable     go to state 60
    call          go to state 61
    constant      go to state 62


State 85

   73 unaryRelExp: NOT unaryRelExp .

    $default  reduce using rule 73 (unaryRelExp)


State 86

  104 mutable: ID '[' . exp ']'

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    exp          go to state 130
    simpleExp    go to state 80
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 81
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 87

  108 call: ID '(' . args ')'

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    $default  reduce using rule 110 (args)

    exp          go to state 131
    simpleExp    go to state 80
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 81
    immutable    go to state 60
    call         go to state 61
    args         go to state 132
    argList      go to state 133
    constant     go to state 62


State 88

  105 immutable: '(' exp . ')'

    ')'  shift, and go to state 134


State 89

   69 simpleExp: simpleExp OR . andExp

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    andExp       go to state 135
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 90

   71 andExp: andExp AND . unaryRelExp

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    unaryRelExp  go to state 136
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 91

   81 relop: EQ .

    $default  reduce using rule 81 (relop)


State 92

   80 relop: GEQ .

    $default  reduce using rule 80 (relop)


State 93

   77 relop: LEQ .

    $default  reduce using rule 77 (relop)


State 94

   82 relop: NEQ .

    $default  reduce using rule 82 (relop)


State 95

   86 minmaxop: MIN .

    $default  reduce using rule 86 (minmaxop)


State 96

   85 minmaxop: MAX .

    $default  reduce using rule 85 (minmaxop)


State 97

   78 relop: '<' .

    $default  reduce using rule 78 (relop)


State 98

   79 relop: '>' .

    $default  reduce using rule 79 (relop)


State 99

   75 relExp: minmaxExp relop . minmaxExp

    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    minmaxExp  go to state 137
    sumExp     go to state 54
    mulExp     go to state 55
    unaryExp   go to state 56
    unaryop    go to state 57
    factor     go to state 58
    mutable    go to state 59
    immutable  go to state 60
    call       go to state 61
    constant   go to state 62


State 100

   83 minmaxExp: minmaxExp minmaxop . sumExp

    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    sumExp     go to state 138
    mulExp     go to state 55
    unaryExp   go to state 56
    unaryop    go to state 57
    factor     go to state 58
    mutable    go to state 59
    immutable  go to state 60
    call       go to state 61
    constant   go to state 62


State 101

   90 sumop: '-' .

    $default  reduce using rule 90 (sumop)


State 102

   89 sumop: '+' .

    $default  reduce using rule 89 (sumop)


State 103

   87 sumExp: sumExp sumop . mulExp

    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    mulExp     go to state 139
    unaryExp   go to state 56
    unaryop    go to state 57
    factor     go to state 58
    mutable    go to state 59
    immutable  go to state 60
    call       go to state 61
    constant   go to state 62


State 104

   93 mulop: '*' .

    $default  reduce using rule 93 (mulop)


State 105

   94 mulop: '/' .

    $default  reduce using rule 94 (mulop)


State 106

   95 mulop: '%' .

    $default  reduce using rule 95 (mulop)


State 107

   91 mulExp: mulExp mulop . unaryExp

    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    unaryExp   go to state 140
    unaryop    go to state 57
    factor     go to state 58
    mutable    go to state 59
    immutable  go to state 60
    call       go to state 61
    constant   go to state 62


State 108

   96 unaryExp: unaryop unaryExp .

    $default  reduce using rule 96 (unaryExp)


State 109

   31 parmId: ID '[' ']' .

    $default  reduce using rule 31 (parmId)


State 110

   28 parmIdList: parmIdList ',' parmId .

    $default  reduce using rule 28 (parmIdList)


State 111

   34 matched: IF simpleExp . THEN matched ELSE matched
   43 unmatched: IF simpleExp . THEN stmt
   44          | IF simpleExp . THEN matched ELSE unmatched
   69 simpleExp: simpleExp . OR andExp

    OR    shift, and go to state 89
    THEN  shift, and go to state 141


State 112

   36 matched: FOR ID . '=' iterRange DO matched
   46 unmatched: FOR ID . '=' iterRange DO unmatched

    '='  shift, and go to state 142


State 113

   57 returnstmt: RETURN error . ';'

    ';'  shift, and go to state 143


State 114

   55 returnstmt: RETURN ';' .

    $default  reduce using rule 55 (returnstmt)


State 115

   56 returnstmt: RETURN exp . ';'

    ';'  shift, and go to state 144


State 116

   35 matched: WHILE simpleExp . DO matched
   45 unmatched: WHILE simpleExp . DO unmatched
   69 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 89
    DO  shift, and go to state 145


State 117

   58 breakstmt: BREAK ';' .

    $default  reduce using rule 58 (breakstmt)


State 118

   49 compoundstmt: '{' localDecls . stmtList '}'
   51 localDecls: localDecls . scopedVarDecl

    BOOL    shift, and go to state 6
    INT     shift, and go to state 7
    STATIC  shift, and go to state 146
    CHAR    shift, and go to state 8

    $default  reduce using rule 54 (stmtList)

    scopedVarDecl  go to state 147
    typeSpec       go to state 148
    stmtList       go to state 149


State 119

   50 compoundstmt: compoundstmt ';' .

    $default  reduce using rule 50 (compoundstmt)


State 120

   47 expstmt: exp ';' .

    $default  reduce using rule 47 (expstmt)


State 121

   65 assignop: ADDASS .

    $default  reduce using rule 65 (assignop)


State 122

   68 assignop: DIVASS .

    $default  reduce using rule 68 (assignop)


State 123

   67 assignop: MULASS .

    $default  reduce using rule 67 (assignop)


State 124

   66 assignop: SUBASS .

    $default  reduce using rule 66 (assignop)


State 125

   60 exp: mutable INC .

    $default  reduce using rule 60 (exp)


State 126

   61 exp: mutable DEC .

    $default  reduce using rule 61 (exp)


State 127

   64 assignop: '=' .

    $default  reduce using rule 64 (assignop)


State 128

   59 exp: mutable assignop . exp
   63    | mutable assignop . error

    error        shift, and go to state 150
    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    exp          go to state 151
    simpleExp    go to state 80
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 81
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 129

   21 funDecl: typeSpec ID '(' parms ')' stmt .

    $default  reduce using rule 21 (funDecl)


State 130

  104 mutable: ID '[' exp . ']'

    ']'  shift, and go to state 152


State 131

  112 argList: exp .

    $default  reduce using rule 112 (argList)


State 132

  108 call: ID '(' args . ')'

    ')'  shift, and go to state 153


State 133

  109 args: argList .
  111 argList: argList . ',' exp

    ','  shift, and go to state 154

    $default  reduce using rule 109 (args)


State 134

  105 immutable: '(' exp ')' .

    $default  reduce using rule 105 (immutable)


State 135

   69 simpleExp: simpleExp OR andExp .
   71 andExp: andExp . AND unaryRelExp

    AND  shift, and go to state 90

    $default  reduce using rule 69 (simpleExp)


State 136

   71 andExp: andExp AND unaryRelExp .

    $default  reduce using rule 71 (andExp)


State 137

   75 relExp: minmaxExp relop minmaxExp .
   83 minmaxExp: minmaxExp . minmaxop sumExp

    MIN  shift, and go to state 95
    MAX  shift, and go to state 96

    $default  reduce using rule 75 (relExp)

    minmaxop  go to state 100


State 138

   83 minmaxExp: minmaxExp minmaxop sumExp .
   87 sumExp: sumExp . sumop mulExp

    '-'  shift, and go to state 101
    '+'  shift, and go to state 102

    $default  reduce using rule 83 (minmaxExp)

    sumop  go to state 103


State 139

   87 sumExp: sumExp sumop mulExp .
   91 mulExp: mulExp . mulop unaryExp

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106

    $default  reduce using rule 87 (sumExp)

    mulop  go to state 107


State 140

   91 mulExp: mulExp mulop unaryExp .

    $default  reduce using rule 91 (mulExp)


State 141

   34 matched: IF simpleExp THEN . matched ELSE matched
   43 unmatched: IF simpleExp THEN . stmt
   44          | IF simpleExp THEN . matched ELSE unmatched

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    RETURN       shift, and go to state 67
    WHILE        shift, and go to state 68
    BREAK        shift, and go to state 69
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    '{'          shift, and go to state 70
    ';'          shift, and go to state 71

    stmt          go to state 155
    matched       go to state 156
    unmatched     go to state 74
    expstmt       go to state 75
    compoundstmt  go to state 76
    returnstmt    go to state 77
    breakstmt     go to state 78
    exp           go to state 79
    simpleExp     go to state 80
    andExp        go to state 50
    unaryRelExp   go to state 51
    relExp        go to state 52
    minmaxExp     go to state 53
    sumExp        go to state 54
    mulExp        go to state 55
    unaryExp      go to state 56
    unaryop       go to state 57
    factor        go to state 58
    mutable       go to state 81
    immutable     go to state 60
    call          go to state 61
    constant      go to state 62


State 142

   36 matched: FOR ID '=' . iterRange DO matched
   46 unmatched: FOR ID '=' . iterRange DO unmatched

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    iterRange    go to state 157
    simpleExp    go to state 158
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 143

   57 returnstmt: RETURN error ';' .

    $default  reduce using rule 57 (returnstmt)


State 144

   56 returnstmt: RETURN exp ';' .

    $default  reduce using rule 56 (returnstmt)


State 145

   35 matched: WHILE simpleExp DO . matched
   45 unmatched: WHILE simpleExp DO . unmatched

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    RETURN       shift, and go to state 67
    WHILE        shift, and go to state 68
    BREAK        shift, and go to state 69
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    '{'          shift, and go to state 70
    ';'          shift, and go to state 71

    matched       go to state 159
    unmatched     go to state 160
    expstmt       go to state 75
    compoundstmt  go to state 76
    returnstmt    go to state 77
    breakstmt     go to state 78
    exp           go to state 79
    simpleExp     go to state 80
    andExp        go to state 50
    unaryRelExp   go to state 51
    relExp        go to state 52
    minmaxExp     go to state 53
    sumExp        go to state 54
    mulExp        go to state 55
    unaryExp      go to state 56
    unaryop       go to state 57
    factor        go to state 58
    mutable       go to state 81
    immutable     go to state 60
    call          go to state 61
    constant      go to state 62


State 146

   10 scopedVarDecl: STATIC . typeSpec varDeclList ';'

    BOOL  shift, and go to state 6
    INT   shift, and go to state 7
    CHAR  shift, and go to state 8

    typeSpec  go to state 161


State 147

   51 localDecls: localDecls scopedVarDecl .

    $default  reduce using rule 51 (localDecls)


State 148

   11 scopedVarDecl: typeSpec . varDeclList ';'

    ID  shift, and go to state 37

    varDeclList  go to state 162
    varDeclInit  go to state 19
    varDeclId    go to state 20


State 149

   49 compoundstmt: '{' localDecls stmtList . '}'
   53 stmtList: stmtList . stmt

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    RETURN       shift, and go to state 67
    WHILE        shift, and go to state 68
    BREAK        shift, and go to state 69
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    '{'          shift, and go to state 70
    '}'          shift, and go to state 163
    ';'          shift, and go to state 71

    stmt          go to state 164
    matched       go to state 73
    unmatched     go to state 74
    expstmt       go to state 75
    compoundstmt  go to state 76
    returnstmt    go to state 77
    breakstmt     go to state 78
    exp           go to state 79
    simpleExp     go to state 80
    andExp        go to state 50
    unaryRelExp   go to state 51
    relExp        go to state 52
    minmaxExp     go to state 53
    sumExp        go to state 54
    mulExp        go to state 55
    unaryExp      go to state 56
    unaryop       go to state 57
    factor        go to state 58
    mutable       go to state 81
    immutable     go to state 60
    call          go to state 61
    constant      go to state 62


State 150

   63 exp: mutable assignop error .

    $default  reduce using rule 63 (exp)


State 151

   59 exp: mutable assignop exp .

    $default  reduce using rule 59 (exp)


State 152

  104 mutable: ID '[' exp ']' .

    $default  reduce using rule 104 (mutable)


State 153

  108 call: ID '(' args ')' .

    $default  reduce using rule 108 (call)


State 154

  111 argList: argList ',' . exp

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    exp          go to state 165
    simpleExp    go to state 80
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 81
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 155

   43 unmatched: IF simpleExp THEN stmt .

    $default  reduce using rule 43 (unmatched)


State 156

   32 stmt: matched .
   34 matched: IF simpleExp THEN matched . ELSE matched
   44 unmatched: IF simpleExp THEN matched . ELSE unmatched

    ELSE  shift, and go to state 166

    $default  reduce using rule 32 (stmt)


State 157

   36 matched: FOR ID '=' iterRange . DO matched
   46 unmatched: FOR ID '=' iterRange . DO unmatched

    DO  shift, and go to state 167


State 158

   41 iterRange: simpleExp . TO simpleExp
   42          | simpleExp . TO simpleExp BY simpleExp
   69 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 89
    TO  shift, and go to state 168


State 159

   35 matched: WHILE simpleExp DO matched .

    $default  reduce using rule 35 (matched)


State 160

   45 unmatched: WHILE simpleExp DO unmatched .

    $default  reduce using rule 45 (unmatched)


State 161

   10 scopedVarDecl: STATIC typeSpec . varDeclList ';'

    ID  shift, and go to state 37

    varDeclList  go to state 169
    varDeclInit  go to state 19
    varDeclId    go to state 20


State 162

   11 scopedVarDecl: typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit

    ';'  shift, and go to state 170
    ','  shift, and go to state 28


State 163

   49 compoundstmt: '{' localDecls stmtList '}' .

    $default  reduce using rule 49 (compoundstmt)


State 164

   53 stmtList: stmtList stmt .

    $default  reduce using rule 53 (stmtList)


State 165

  111 argList: argList ',' exp .

    $default  reduce using rule 111 (argList)


State 166

   34 matched: IF simpleExp THEN matched ELSE . matched
   44 unmatched: IF simpleExp THEN matched ELSE . unmatched

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    RETURN       shift, and go to state 67
    WHILE        shift, and go to state 68
    BREAK        shift, and go to state 69
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    '{'          shift, and go to state 70
    ';'          shift, and go to state 71

    matched       go to state 171
    unmatched     go to state 172
    expstmt       go to state 75
    compoundstmt  go to state 76
    returnstmt    go to state 77
    breakstmt     go to state 78
    exp           go to state 79
    simpleExp     go to state 80
    andExp        go to state 50
    unaryRelExp   go to state 51
    relExp        go to state 52
    minmaxExp     go to state 53
    sumExp        go to state 54
    mulExp        go to state 55
    unaryExp      go to state 56
    unaryop       go to state 57
    factor        go to state 58
    mutable       go to state 81
    immutable     go to state 60
    call          go to state 61
    constant      go to state 62


State 167

   36 matched: FOR ID '=' iterRange DO . matched
   46 unmatched: FOR ID '=' iterRange DO . unmatched

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    IF           shift, and go to state 65
    FOR          shift, and go to state 66
    RETURN       shift, and go to state 67
    WHILE        shift, and go to state 68
    BREAK        shift, and go to state 69
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48
    '{'          shift, and go to state 70
    ';'          shift, and go to state 71

    matched       go to state 173
    unmatched     go to state 174
    expstmt       go to state 75
    compoundstmt  go to state 76
    returnstmt    go to state 77
    breakstmt     go to state 78
    exp           go to state 79
    simpleExp     go to state 80
    andExp        go to state 50
    unaryRelExp   go to state 51
    relExp        go to state 52
    minmaxExp     go to state 53
    sumExp        go to state 54
    mulExp        go to state 55
    unaryExp      go to state 56
    unaryop       go to state 57
    factor        go to state 58
    mutable       go to state 81
    immutable     go to state 60
    call          go to state 61
    constant      go to state 62


State 168

   41 iterRange: simpleExp TO . simpleExp
   42          | simpleExp TO . simpleExp BY simpleExp

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    simpleExp    go to state 175
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 169

   10 scopedVarDecl: STATIC typeSpec varDeclList . ';'
   12 varDeclList: varDeclList . ',' varDeclInit

    ';'  shift, and go to state 176
    ','  shift, and go to state 28


State 170

   11 scopedVarDecl: typeSpec varDeclList ';' .

    $default  reduce using rule 11 (scopedVarDecl)


State 171

   34 matched: IF simpleExp THEN matched ELSE matched .

    $default  reduce using rule 34 (matched)


State 172

   44 unmatched: IF simpleExp THEN matched ELSE unmatched .

    $default  reduce using rule 44 (unmatched)


State 173

   36 matched: FOR ID '=' iterRange DO matched .

    $default  reduce using rule 36 (matched)


State 174

   46 unmatched: FOR ID '=' iterRange DO unmatched .

    $default  reduce using rule 46 (unmatched)


State 175

   41 iterRange: simpleExp TO simpleExp .
   42          | simpleExp TO simpleExp . BY simpleExp
   69 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 89
    BY  shift, and go to state 177

    $default  reduce using rule 41 (iterRange)


State 176

   10 scopedVarDecl: STATIC typeSpec varDeclList ';' .

    $default  reduce using rule 10 (scopedVarDecl)


State 177

   42 iterRange: simpleExp TO simpleExp BY . simpleExp

    NOT          shift, and go to state 39
    '*'          shift, and go to state 40
    '-'          shift, and go to state 41
    '?'          shift, and go to state 42
    ID           shift, and go to state 43
    BOOLCONST    shift, and go to state 44
    NUMCONST     shift, and go to state 45
    CHARCONST    shift, and go to state 46
    STRINGCONST  shift, and go to state 47
    '('          shift, and go to state 48

    simpleExp    go to state 178
    andExp       go to state 50
    unaryRelExp  go to state 51
    relExp       go to state 52
    minmaxExp    go to state 53
    sumExp       go to state 54
    mulExp       go to state 55
    unaryExp     go to state 56
    unaryop      go to state 57
    factor       go to state 58
    mutable      go to state 59
    immutable    go to state 60
    call         go to state 61
    constant     go to state 62


State 178

   42 iterRange: simpleExp TO simpleExp BY simpleExp .
   69 simpleExp: simpleExp . OR andExp

    OR  shift, and go to state 89

    $default  reduce using rule 42 (iterRange)
